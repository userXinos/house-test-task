Необходимо используя [API JSON Placeholder](https://jsonplaceholder.typicode.com/) создать frontend приложение, которое состоит из двух страниц:

1. Главная страница – список постов с возможностью поиска и страницами
2. Страница комментарий поста **-** страница комментарий поста с детальной информацией

## **Главная страница**

Ключевые элементы страницы:

- `Поле для поиска` по title (?title_like=)
- `Список постов`
- `Paginator` – список страниц

При введении текста в `Поле для поиска`, должен происходить поиск по названию среди всех постов и выводиться его результат в `Список постов` ****ниже.

Если в поле ничего не введено, то показывается список первых попавшихся постов.

Примерная структура элементов списка:

- `заголовок`
- `краткое описание`

Внизу страницы есть `Paginator` ****вида [1, 2, 3, 4, 5]. Не показывать больше 10 страниц.

При клике на вторую страницу показываются посты с 11 по 20. При клике на третью страницу показываются посты с 21 по 30 … и т.д.

Выбранная страница в `Paginator` ****должна отличаться по стилю от всех остальных.

При перезагрузке страницы состояние выбранных фильтров (поиска и страницы) должно сохраняться и использоваться для первоначального запроса.

Поиск и пагинация должны происходить на стороне API.

При клике на название поста происходит переход на `Страница комментарий поста`

## Страница комментарий поста

Страница должна иметь список комментариев выбранного поста:

Примерная структура элементов списка

- `Заголовок`
- `Текст`
- `email автора`

Со страницы объекта должна быть возможность вернуться к полному списку

## Требования

- Основные технологии - `NextJs`, `React****-****Paginate`
- Компонентный подход + `scss module`
- Готовые UI библиотеки использовать нельзя, все нужно сверстать самостоятельно
- Структура приложения должна быть с расчетом на будущий рост

## Плюсом будет если

- Используется `Redux-tookit, rtk query.` Данные должны храниться в стейт-менеджере
- Код написан с помощью `TypeScript`
- Реализовать форму поиска через `react hook form`

В остальном выбирайте любые инструменты для выполнения задания. Главное, чтобы вашим приложением можно было пользоваться в рамках описанных сценариев.

Насчёт дизайна можете много не думать – ссылок, кнопок и заголовков будет достаточно. Тем не менее сделайте это так, чтобы этим можно было пользоваться.
